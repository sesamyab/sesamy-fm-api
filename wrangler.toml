name = "podcast-service"
main = "dist/worker.js"
compatibility_date = "2024-09-23"
compatibility_flags = ["nodejs_compat"]

# Environment variables (set these in Cloudflare dashboard or use wrangler secret)
[vars]
NODE_ENV = "development"
PORT = "8787"
R2_ENDPOINT = "https://podcast-media.sesamy.dev"
SERVICE_BASE_URL = "https://podcast-service.sesamy-dev.workers.dev"
# Encoding service provider: 'aws' (default) or 'cloudflare'  
ENCODING_SERVICE_PROVIDER = "aws"
# Transcription Configuration - nova-3 for enhanced features
# DEFAULT_TRANSCRIPTION_MODEL = "@cf/deepgram/nova-3"
DEFAULT_TRANSCRIPTION_MODEL = "@cf/openai/whisper"
USE_NOVA3_FEATURES = "true"
# Auth0 Configuration
AUTH0_DOMAIN = "auth2.sesamy.dev"
AUTH0_CLIENT_ID = "sesamy-fm"
JWKS_URL = "https://token.sesamy.dev/.well-known/jwks.json"


# Secrets to be set with: wrangler secret put <name>
# - DATABASE_URL (for production Turso database)
# - R2_ACCESS_KEY_ID (for R2 pre-signed URLs)
# - R2_SECRET_ACCESS_KEY (for R2 pre-signed URLs)
# - AUTH0_CLIENT_SECRET (Auth0 M2M client secret for organization management)
# R2_ENDPOINT, AUTH0_DOMAIN, and AUTH0_CLIENT_ID are set below as environment variables (not secrets)

# D1 Database binding
[[d1_databases]]
binding = "DB"
database_name = "podcast-service-db"
database_id = "a27b543a-696d-4726-9329-2a15578ac861"
migrations_dir = "./drizzle"

# R2 Storage binding
[[r2_buckets]]
binding = "BUCKET"
bucket_name = "podcast-service-assets"
preview_bucket_name = "podcast-service-assets"

# Workers AI binding
[ai]
binding = "AI"

# EncodingContainer is implemented as a Durable Object (see durable_objects.bindings below)
# Containers feature is deprecated, using Durable Objects instead

# Workflow configuration
[[workflows]]
name = "audio-processing-workflow"
binding = "AUDIO_PROCESSING_WORKFLOW"
class_name = "AudioProcessingWorkflow"

[[workflows]]
name = "import-show-workflow"
binding = "IMPORT_SHOW_WORKFLOW" 
class_name = "ImportShowWorkflow"

[[workflows]]
name = "tts-generation-workflow"
binding = "TTS_GENERATION_WORKFLOW"
class_name = "TtsGenerationWorkflow"

[[workflows]]
name = "transcription-workflow"
binding = "TRANSCRIPTION_WORKFLOW"
class_name = "TranscriptionWorkflow"

# Durable Objects bindings
[[durable_objects.bindings]]
class_name = "EncodingContainer"
name = "ENCODING_CONTAINER"

# Durable Objects migrations
[[migrations]]
new_sqlite_classes = ["EncodingContainer"]
tag = "v1"

# Cron triggers for background task processing
[triggers]
crons = ["*/5 * * * *"]  # Run every 5 minutes

[build]
command = "tsc -p tsconfig.worker.json"

# Development configuration
[env.development]
vars = { NODE_ENV = "development" }

# Production configuration  
[env.production]
vars = { NODE_ENV = "production" }

# Limits
[limits]
cpu_ms = 300000  # 5 minutes CPU time for intensive audio processing

# Observability - Enable logging and analytics
[observability]
enabled = true

# Enable tail logs for development
[dev]
inspector_port = 9229
local_protocol = "https"
upstream_protocol = "https"
